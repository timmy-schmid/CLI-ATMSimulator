/*
 * This Java source file was generated by the Gradle 'init' task.

 * Placed testing functions for Transaction in APP class (will move later?)
 */

// package R18_G2_ASM1; //removing this gives no error when compiling????

import java.util.HashMap;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;

public class App {

    public String getGreeting() {
        return "Hello World!";
    }

    public static void testPrintCard(Card userA){
        userA.getCardDetails();
    }

    public static void testDeductMoneyFromCard(Transaction withdrawal){
        Card lala = withdrawal.getAccount().getCardsList().get(0);
        boolean result =withdrawal.canDeductFromCard(lala);
        System.out.println("Result = " + result);
    }

    //just printing out ALL enum vals
    public static void testMoneyType(){
        for (MoneyType type: MoneyType.values()) {
            System.out.println("type = "+type + ", value = " + type.getValue() +" , amount = " + type.getAmount());
        }
    }

    // public static void testExactWithdrawalAmount(Transaction withdrawal){
    //     //first time withdrawing money from ATM (Full originally)
    //    boolean result =  withdrawal.exactWithdrawalAmountCheck();
    // //    assert(MoneyType.HUNDRED_DOLLARS.getAmount() == 49); //decreased by 1
    // }

    //prints output after splitting up deductAmount into different money/coin components 
    public static void testCashRemainder(Transaction withdrawal){
        withdrawal.findRemainder(); //withdrawal.getDeductAmount());
        withdrawal.printRemainderStorageMap();
    }

    //1 user using ATM machine
    public static void testDeductFromATM(Transaction withdrawal){
         withdrawal.WITHDRAW_MONEY(withdrawal.getAccount().getCardsList().get(0));
    }

    public static void testDEPOSIT(T_Deposit deposit){
        deposit.proceedDepositTransaction(deposit.getAccount());
    }
    
    //3 users using ATM machine (A, B, C)
    public static void multipleTestDeductFromATM(Transaction withdrawalA, Transaction withdrawalB, Transaction withdrawalC){
       
       withdrawalA.WITHDRAW_MONEY(withdrawalA.getAccount().getCardsList().get(0));
    }

    public static void main(String[] args) {
        ATM1 atm1 = new ATM1();

        ArrayList<Card> cardsListA = new ArrayList<>();
        ArrayList<Card> cardsListB = new ArrayList<>();
        ArrayList<Card> cardsListC = new ArrayList<>();

        Date date = new Date();

        Card userA = new Card("BOB",1500, 33333, date, date, false, false, false, 111); //"15/08/2019", "20/08/2022");
        cardsListA.add(userA);
        Account userAAccount = new Account(userA.getCardNumber(), userA.getTotalAmount(), cardsListA);

        // Card userB = new Card("DYLAN", 121,1000, "25/08/2020", "15/10/2022");
        // cardsListB.add(userB);
        // Account userBAccount = new Account(userB.getID(), cardsListB);

        double amountAB = 59.50;

        // //where transactionID = userID? 
        Transaction withdrawalA = new T_Withdrawal(atm1, TransactionType.WITHDRAWAL, userAAccount, amountAB, date, userA.getCardNumber());

        T_Deposit depositA = new T_Deposit(atm1, TransactionType.DEPOSIT, userAAccount, amountAB, date, userA.getCardNumber());

        
        // Transaction withdrawalB = new T_Withdrawal(atm1, TransactionType.WITHDRAWAL, userBAccount, amountAB, date, userB.getID());

        // Transaction withdrawalC = new T_Withdrawal(atm1, TransactionType.WITHDRAWAL, userCAccount, amountC, date, userC.getID());


        // // testDeductFromATM(withdrawal);
        // multipleTestDeductFromATM(withdrawalA, withdrawalB, withdrawalC);
        // testMoneyType();

       
        System.out.println(userAAccount.getBalance());
        testPrintCard(userA);

        System.out.println("\nWITHDRAW TEST\n");
        testDeductMoneyFromCard(withdrawalA);
         testDeductFromATM(withdrawalA);
        testPrintCard(userA);
        
         System.out.println("\n----------->>>>>> NOW DEPOSITING NEW TEST\n");
         System.out.println(userAAccount.getBalance());
        testPrintCard(userA);

       testDEPOSIT(depositA);
       
        testPrintCard(userA);
    }
}
